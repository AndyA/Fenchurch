#!/usr/bin/env perl

use v5.10;

use autodie;
use strict;
use warnings;

use Dancer ':script';
use Dancer::Plugin::Database;
use Getopt::Long;

my %ACTION = (
  stats => {
    description => 'Display change stats',
    handler     => \&cmd_stats
  }
);

my @SHADOW_VERB = qw( INSERT UPDATE DELETE );

GetOptions() or die usage();
@ARGV >= 1   or die usage();

my $verb = shift @ARGV;
my $action = $ACTION{$verb} // die "Unknown verb: $verb";
$action->{handler}(database);

sub usage {
  my @msg = ("Usage: $0 <verb>");
  return join "\n", @msg;
}

sub stats_hdr {
  return sprintf "%-35s | %s", "Table",
   join( ' | ', map { sprintf "%10s", $_ } @SHADOW_VERB );
}

sub stats_row {
  my ( $table, $rec ) = @_;
  return sprintf "%-35s | %s", $table,
   join( ' | ', map { sprintf "%10d", $rec->{$_} // 0 } @SHADOW_VERB );
}

sub cmd_stats {
  my $dbh   = shift;
  my %total = ( map { $_ => 0 } @SHADOW_VERB );
  my $hdr   = stats_hdr();
  my $rule  = "=" x length $hdr;

  say $rule;
  say $hdr;
  say $rule;

  for my $table ( find_shadow_tables($dbh) ) {
    next if $table eq "shadow_log";
    my $rc = $dbh->selectall_arrayref(
      join( ' ',
        "SELECT `shadow_verb`, COUNT(*) AS `count`",
        "FROM `$table`",
        "GROUP BY `shadow_verb`" ),
      { Slice => {} }
    );
    my $rec = { map { $_ => 0 } @SHADOW_VERB };
    for my $row (@$rc) {
      my $shadow_verb = $row->{shadow_verb};
      my $count       = $row->{count};
      $rec->{$shadow_verb} = $count;
      $total{$shadow_verb} += $count;
    }
    say stats_row( $table, $rec );
  }
  my $totals = stats_row( "TOTAL", \%total );
  say $rule;
  say $totals;
  say $rule;
}

sub get_table_info {
  my ( $dbh, $table ) = @_;
  state(%table_info);
  return $table_info{$table} //=
   $dbh->selectall_arrayref( "DESCRIBE `$table`", { Slice => {} } );
}

sub find_shadow_tables {
  my $dbh = shift;
  return
   @{ $dbh->selectcol_arrayref( "SHOW TABLES LIKE ?", {}, "shadow_%" ) };
}
